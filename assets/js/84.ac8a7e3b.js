(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{524:function(a,s,t){"use strict";t.r(s);var e=t(76),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"字符串操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串操作"}},[a._v("#")]),a._v(" 字符串操作")]),a._v(" "),t("p",[a._v("本章介绍 Bash 字符串操作的语法。")]),a._v(" "),t("h2",{attrs:{id:"字符串的长度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串的长度"}},[a._v("#")]),a._v(" 字符串的长度")]),a._v(" "),t("p",[a._v("获取字符串长度的语法如下。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("#")]),a._v("varname}")]),a._v("\n")])])]),t("p",[a._v("下面是一个例子。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("myPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/cam/book/long.file.name\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("#")]),a._v("myPath}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("29")]),a._v("\n")])])]),t("p",[a._v("大括号"),t("code",[a._v("{}")]),a._v("是必需的，否则 Bash 会将"),t("code",[a._v("$#")]),a._v("理解成脚本的参数个数，将变量名理解成文本。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$#")]),a._v("myvar\n0myvar\n")])])]),t("p",[a._v("上面例子中，Bash 将"),t("code",[a._v("$#")]),a._v("和"),t("code",[a._v("myvar")]),a._v("分开解释了。")]),a._v(" "),t("h2",{attrs:{id:"子字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子字符串"}},[a._v("#")]),a._v(" 子字符串")]),a._v(" "),t("p",[a._v("字符串提取子串的语法如下。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${varname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("offset"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("length}")]),a._v("\n")])])]),t("p",[a._v("上面语法的含义是返回变量"),t("code",[a._v("$varname")]),a._v("的子字符串，从位置"),t("code",[a._v("offset")]),a._v("开始（从"),t("code",[a._v("0")]),a._v("开始计算），长度为"),t("code",[a._v("length")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("count")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("frogfootman\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${count"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("4"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("4}")]),a._v("\nfoot\n")])])]),t("p",[a._v("上面例子返回字符串"),t("code",[a._v("frogfootman")]),a._v("从4号位置开始的长度为4的子字符串"),t("code",[a._v("foot")]),a._v("。")]),a._v(" "),t("p",[a._v("这种语法不能直接操作字符串，只能通过变量来读取字符串，并且不会改变原始字符串。变量前面的美元符号可以省略。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 报错")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v('${"hello"'),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("2"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("3}")]),a._v("\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v('"hello"')]),a._v("不是变量名，导致 Bash 报错。")]),a._v(" "),t("p",[a._v("如果省略"),t("code",[a._v("length")]),a._v("，则从位置"),t("code",[a._v("offset")]),a._v("开始，一直返回到字符串的结尾。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("count")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("frogfootman\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${count"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("4}")]),a._v("\nfootman\n")])])]),t("p",[a._v("上面例子是返回变量"),t("code",[a._v("count")]),a._v("从4号位置一直到结尾的子字符串。")]),a._v(" "),t("p",[a._v("如果"),t("code",[a._v("offset")]),a._v("为负值，表示从字符串的末尾开始算起。注意，负数前面必须有一个空格， 以防止与"),t("code",[a._v("${variable:-word}")]),a._v("的变量的设置默认值语法混淆。这时还可以指定"),t("code",[a._v("length")]),a._v("，"),t("code",[a._v("length")]),a._v("可以是正值，也可以是负值（负值不能超过"),t("code",[a._v("offset")]),a._v("的长度）。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("foo")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"This string is long."')]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" -5}")]),a._v("\nlong.\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" -5"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("2}")]),a._v("\nlo\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" -5"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":-")]),a._v("2}")]),a._v("\nlon\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("offset")]),a._v("为"),t("code",[a._v("-5")]),a._v("，表示从倒数第5个字符开始截取，所以返回"),t("code",[a._v("long.")]),a._v("。如果指定长度"),t("code",[a._v("length")]),a._v("为"),t("code",[a._v("2")]),a._v("，则返回"),t("code",[a._v("lo")]),a._v("；如果"),t("code",[a._v("length")]),a._v("为"),t("code",[a._v("-2")]),a._v("，表示要排除从字符串末尾开始的2个字符，所以返回"),t("code",[a._v("lon")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"搜索和替换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搜索和替换"}},[a._v("#")]),a._v(" 搜索和替换")]),a._v(" "),t("p",[a._v("Bash 提供字符串搜索和替换的多种方法。")]),a._v(" "),t("p",[t("strong",[a._v("（1）字符串头部的模式匹配。")])]),a._v(" "),t("p",[a._v("以下两种语法可以检查字符串开头，是否匹配给定的模式。如果匹配成功，就删除匹配的部分，返回剩下的部分。原始变量不会发生变化。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果 pattern 匹配变量 variable 的开头，")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除最短匹配（非贪婪匹配）的部分，返回剩余部分")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("#")]),a._v("pattern}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果 pattern 匹配变量 variable 的开头，")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除最长匹配（贪婪匹配）的部分，返回剩余部分")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("##")]),a._v("pattern}")]),a._v("\n")])])]),t("p",[a._v("上面两种语法会删除变量字符串开头的匹配部分（将其替换为空），返回剩下的部分。区别是一个是最短匹配（又称非贪婪匹配），另一个是最长匹配（又称贪婪匹配）。")]),a._v(" "),t("p",[a._v("匹配模式"),t("code",[a._v("pattern")]),a._v("可以使用"),t("code",[a._v("*")]),a._v("、"),t("code",[a._v("?")]),a._v("、"),t("code",[a._v("[]")]),a._v("等通配符。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("myPath")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/cam/book/long.file.name\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${myPath"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("#")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("*"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("}")]),a._v("\ncam/book/long.file.name\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${myPath"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("##")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("*"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("}")]),a._v("\nlong.file.name\n")])])]),t("p",[a._v("上面例子中，匹配的模式是"),t("code",[a._v("/*/")]),a._v("，其中"),t("code",[a._v("*")]),a._v("可以匹配任意数量的字符，所以最短匹配是"),t("code",[a._v("/home/")]),a._v("，最长匹配是"),t("code",[a._v("/home/cam/book/")]),a._v("。")]),a._v(" "),t("p",[a._v("下面写法可以删除文件路径的目录部分，只留下文件名。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/cam/book/long.file.name\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("##")]),a._v("*"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("}")]),a._v("\nlong.file.name\n")])])]),t("p",[a._v("上面例子中，模式"),t("code",[a._v("*/")]),a._v("匹配目录部分，所以只返回文件名。")]),a._v(" "),t("p",[a._v("下面再看一个例子。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("phone")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"555-456-1414"')]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${phone"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("#")]),a._v("*-}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("456")]),a._v("-1414\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${phone"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("##")]),a._v("*-}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1414")]),a._v("\n")])])]),t("p",[a._v("如果匹配不成功，则返回原始字符串。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("phone")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"555-456-1414"')]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${phone"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("#")]),a._v("444}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("555")]),a._v("-456-1414\n")])])]),t("p",[a._v("上面例子中，原始字符串里面无法匹配模式"),t("code",[a._v("444")]),a._v("，所以原样返回。")]),a._v(" "),t("p",[a._v("如果要将头部匹配的部分，替换成其他内容，采用下面的写法。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模式必须出现在字符串的开头")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("#")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 示例")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("foo")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("JPG.JPG\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("#")]),a._v("JPG"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("jpg}")]),a._v("\njpg.JPG\n")])])]),t("p",[a._v("上面例子中，被替换的"),t("code",[a._v("JPG")]),a._v("必须出现在字符串头部，所以返回"),t("code",[a._v("jpg.JPG")]),a._v("。")]),a._v(" "),t("p",[t("strong",[a._v("（2）字符串尾部的模式匹配。")])]),a._v(" "),t("p",[a._v("以下两种语法可以检查字符串结尾，是否匹配给定的模式。如果匹配成功，就删除匹配的部分，返回剩下的部分。原始变量不会发生变化。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果 pattern 匹配变量 variable 的结尾，")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除最短匹配（非贪婪匹配）的部分，返回剩余部分")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v("pattern}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果 pattern 匹配变量 variable 的结尾，")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除最长匹配（贪婪匹配）的部分，返回剩余部分")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%%")]),a._v("pattern}")]),a._v("\n")])])]),t("p",[a._v("上面两种语法会删除变量字符串结尾的匹配部分（将其替换为空），返回剩下的部分。区别是一个是最短匹配（又称非贪婪匹配），另一个是最长匹配（又称贪婪匹配）。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/cam/book/long.file.name\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v(".*}")]),a._v("\n/home/cam/book/long.file\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%%")]),a._v(".*}")]),a._v("\n/home/cam/book/long\n")])])]),t("p",[a._v("上面例子中，匹配模式是"),t("code",[a._v(".*")]),a._v("，其中"),t("code",[a._v("*")]),a._v("可以匹配任意数量的字符，所以最短匹配是"),t("code",[a._v(".name")]),a._v("，最长匹配是"),t("code",[a._v(".file.name")]),a._v("。")]),a._v(" "),t("p",[a._v("下面写法可以删除路径的文件名部分，只留下目录部分。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/cam/book/long.file.name\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("*}")]),a._v("\n/home/cam/book\n")])])]),t("p",[a._v("上面例子中，模式"),t("code",[a._v("/*")]),a._v("匹配文件名部分，所以只返回目录部分。")]),a._v(" "),t("p",[a._v("下面的写法可以替换文件的后缀名。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("file")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("foo.png\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${file"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v(".png}")]),a._v(".jpg\nfoo.jpg\n")])])]),t("p",[a._v("上面的例子将文件的后缀名，从"),t("code",[a._v(".png")]),a._v("改成了"),t("code",[a._v(".jpg")]),a._v("。")]),a._v(" "),t("p",[a._v("下面再看一个例子。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("phone")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"555-456-1414"')]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${phone"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v("-*}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("555")]),a._v("-456\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${phone"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%%")]),a._v("-*}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("555")]),a._v("\n")])])]),t("p",[a._v("如果匹配不成功，则返回原始字符串。")]),a._v(" "),t("p",[a._v("如果要将尾部匹配的部分，替换成其他内容，采用下面的写法。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模式必须出现在字符串的结尾")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 示例")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("foo")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("JPG.JPG\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v("JPG"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("jpg}")]),a._v("\nJPG.jpg\n")])])]),t("p",[a._v("上面例子中，被替换的"),t("code",[a._v("JPG")]),a._v("必须出现在字符串尾部，所以返回"),t("code",[a._v("JPG.jpg")]),a._v("。")]),a._v(" "),t("p",[t("strong",[a._v("（3）任意位置的模式匹配。")])]),a._v(" "),t("p",[a._v("以下两种语法可以检查字符串内部，是否匹配给定的模式。如果匹配成功，就删除匹配的部分，换成其他的字符串返回。原始变量不会发生变化。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果 pattern 匹配变量 variable 的一部分，")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最长匹配（贪婪匹配）的那部分被 string 替换，但仅替换第一个匹配")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果 pattern 匹配变量 variable 的一部分，")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最长匹配（贪婪匹配）的那部分被 string 替换，所有匹配都替换")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string}")]),a._v("\n")])])]),t("p",[a._v("上面两种语法都是最长匹配（贪婪匹配）下的替换，区别是前一个语法仅仅替换第一个匹配，后一个语法替换所有匹配。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/cam/foo/foo.name\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("bar}")]),a._v("\n/home/cam/bar/foo.name\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("bar}")]),a._v("\n/home/cam/bar/bar.name\n")])])]),t("p",[a._v("上面例子中，前一个命令只替换了第一个"),t("code",[a._v("foo")]),a._v("，后一个命令将两个"),t("code",[a._v("foo")]),a._v("都替换了。")]),a._v(" "),t("p",[a._v("下面的例子将分隔符从"),t("code",[a._v(":")]),a._v("换成换行符。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" -e "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("'\\n'}")]),a._v("\n/usr/local/bin\n/usr/bin\n/bin\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("echo")]),a._v("命令的"),t("code",[a._v("-e")]),a._v("参数，表示将替换后的字符串的"),t("code",[a._v("\\n")]),a._v("字符，解释为换行符。")]),a._v(" "),t("p",[a._v("模式部分可以使用通配符。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("phone")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"555-456-1414"')]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${phone"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("5?4"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("-}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("55")]),a._v("-56-1414\n")])])]),t("p",[a._v("上面的例子将"),t("code",[a._v("5-4")]),a._v("替换成"),t("code",[a._v("-")]),a._v("。")]),a._v(" "),t("p",[a._v("如果省略了"),t("code",[a._v("string")]),a._v("部分，那么就相当于匹配的部分替换成空字符串，即删除匹配的部分。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/cam/foo/foo.name\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${path"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v(".*"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("}")]),a._v("\n/home/cam/foo/foo\n")])])]),t("p",[a._v("上面例子中，第二个斜杠后面的"),t("code",[a._v("string")]),a._v("部分省略了，所以模式"),t("code",[a._v(".*")]),a._v("匹配的部分"),t("code",[a._v(".name")]),a._v("被删除后返回。")]),a._v(" "),t("p",[a._v("前面提到过，这个语法还有两种扩展形式。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模式必须出现在字符串的开头")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("#")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 模式必须出现在字符串的结尾")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${variable"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("%")]),a._v("pattern"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string}")]),a._v("\n")])])]),t("h2",{attrs:{id:"改变大小写"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#改变大小写"}},[a._v("#")]),a._v(" 改变大小写")]),a._v(" "),t("p",[a._v("下面的语法可以改变变量的大小写。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 转为大写")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${varname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^^")]),a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 转为小写")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${varname"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(",,")]),a._v("}")]),a._v("\n")])])]),t("p",[a._v("下面是一个例子。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("foo")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("heLLo\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^^")]),a._v("}")]),a._v("\nHELLO\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${foo"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(",,")]),a._v("}")]),a._v("\nhello\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);