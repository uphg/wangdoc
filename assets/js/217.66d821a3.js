(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{657:function(t,a,s){"use strict";s.r(a);var e=s(76),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据类型概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型概述"}},[t._v("#")]),t._v(" 数据类型概述")]),t._v(" "),s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("JavaScript 语言的每一个值，都属于某一种数据类型。JavaScript 的数据类型，共有六种。（ES6 又新增了第七种 Symbol 类型的值，本教程不涉及。）")]),t._v(" "),s("ul",[s("li",[t._v("数值（number）：整数和小数（比如"),s("code",[t._v("1")]),t._v("和"),s("code",[t._v("3.14")]),t._v("）。")]),t._v(" "),s("li",[t._v("字符串（string）：文本（比如"),s("code",[t._v("Hello World")]),t._v("）。")]),t._v(" "),s("li",[t._v("布尔值（boolean）：表示真伪的两个特殊值，即"),s("code",[t._v("true")]),t._v("（真）和"),s("code",[t._v("false")]),t._v("（假）。")]),t._v(" "),s("li",[s("code",[t._v("undefined")]),t._v("：表示“未定义”或不存在，即由于目前没有定义，所以此处暂时没有任何值。")]),t._v(" "),s("li",[s("code",[t._v("null")]),t._v("：表示空值，即此处的值为空。")]),t._v(" "),s("li",[t._v("对象（object）：各种值组成的集合。")])]),t._v(" "),s("p",[t._v("通常，数值、字符串、布尔值这三种类型，合称为原始类型（primitive type）的值，即它们是最基本的数据类型，不能再细分了。对象则称为合成类型（complex type）的值，因为一个对象往往是多个原始类型的值的合成，可以看作是一个存放各种值的容器。至于"),s("code",[t._v("undefined")]),t._v("和"),s("code",[t._v("null")]),t._v("，一般将它们看成两个特殊值。")]),t._v(" "),s("p",[t._v("对象是最复杂的数据类型，又可以分成三个子类型。")]),t._v(" "),s("ul",[s("li",[t._v("狭义的对象（object）")]),t._v(" "),s("li",[t._v("数组（array）")]),t._v(" "),s("li",[t._v("函数（function）")])]),t._v(" "),s("p",[t._v("狭义的对象和数组是两种不同的数据组合方式，除非特别声明，本教程的“对象”都特指狭义的对象。函数其实是处理数据的方法，JavaScript 把它当成一种数据类型，可以赋值给变量，这为编程带来了很大的灵活性，也为 JavaScript 的“函数式编程”奠定了基础。")]),t._v(" "),s("h2",{attrs:{id:"typeof-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof-运算符"}},[t._v("#")]),t._v(" typeof 运算符")]),t._v(" "),s("p",[t._v("JavaScript 有三种方法，可以确定一个值到底是什么类型。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("typeof")]),t._v("运算符")]),t._v(" "),s("li",[s("code",[t._v("instanceof")]),t._v("运算符")]),t._v(" "),s("li",[s("code",[t._v("Object.prototype.toString")]),t._v("方法")])]),t._v(" "),s("p",[s("code",[t._v("instanceof")]),t._v("运算符和"),s("code",[t._v("Object.prototype.toString")]),t._v("方法，将在后文介绍。这里介绍"),s("code",[t._v("typeof")]),t._v("运算符。")]),t._v(" "),s("p",[s("code",[t._v("typeof")]),t._v("运算符可以返回一个值的数据类型。")]),t._v(" "),s("p",[t._v("数值、字符串、布尔值分别返回"),s("code",[t._v("number")]),t._v("、"),s("code",[t._v("string")]),t._v("、"),s("code",[t._v("boolean")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "number"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "string"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "boolean"')]),t._v("\n")])])]),s("p",[t._v("函数返回"),s("code",[t._v("function")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" f\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "function"')]),t._v("\n")])])]),s("p",[s("code",[t._v("undefined")]),t._v("返回"),s("code",[t._v("undefined")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n")])])]),s("p",[t._v("利用这一点，"),s("code",[t._v("typeof")]),t._v("可以用来检查一个没有声明的变量，而不报错。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("v\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: v is not defined")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" v\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n")])])]),s("p",[t._v("上面代码中，变量"),s("code",[t._v("v")]),t._v("没有用"),s("code",[t._v("var")]),t._v("命令声明，直接使用就会报错。但是，放在"),s("code",[t._v("typeof")]),t._v("后面，就不报错了，而是返回"),s("code",[t._v("undefined")]),t._v("。")]),t._v(" "),s("p",[t._v("实际编程中，这个特点通常用在判断语句。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误的写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: v is not defined")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确的写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("对象返回"),s("code",[t._v("object")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" window "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n")])])]),s("p",[t._v("上面代码中，空数组（"),s("code",[t._v("[]")]),t._v("）的类型也是"),s("code",[t._v("object")]),t._v("，这表示在 JavaScript 内部，数组本质上只是一种特殊的对象。这里顺便提一下，"),s("code",[t._v("instanceof")]),t._v("运算符可以区分数组和对象。"),s("code",[t._v("instanceof")]),t._v("运算符的详细解释，请见《面向对象编程》一章。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\no "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[s("code",[t._v("null")]),t._v("返回"),s("code",[t._v("object")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n")])])]),s("p",[s("code",[t._v("null")]),t._v("的类型是"),s("code",[t._v("object")]),t._v("，这是由于历史原因造成的。1995年的 JavaScript 语言第一版，只设计了五种数据类型（对象、整数、浮点数、字符串和布尔值），没考虑"),s("code",[t._v("null")]),t._v("，只把它当作"),s("code",[t._v("object")]),t._v("的一种特殊值。后来"),s("code",[t._v("null")]),t._v("独立出来，作为一种单独的数据类型，为了兼容以前的代码，"),s("code",[t._v("typeof null")]),t._v("返回"),s("code",[t._v("object")]),t._v("就没法改变了。")]),t._v(" "),s("h2",{attrs:{id:"参考链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),s("ul",[s("li",[t._v("Axel Rauschmayer, "),s("a",{attrs:{href:"http://www.2ality.com/2011/11/improving-typeof.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Improving the JavaScript typeof operator"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);