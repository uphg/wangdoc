(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{512:function(a,s,t){"use strict";t.r(s);var n=t(76),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"bash-的模式扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bash-的模式扩展"}},[a._v("#")]),a._v(" Bash 的模式扩展")]),a._v(" "),t("h2",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[a._v("#")]),a._v(" 简介")]),a._v(" "),t("p",[a._v("Shell 接收到用户输入的命令以后，会根据空格将用户的输入，拆分成一个个词元（token）。然后，Shell 会扩展词元里面的特殊字符，扩展完成后才会调用相应的命令。")]),a._v(" "),t("p",[a._v("这种特殊字符的扩展，称为模式扩展（globbing）。其中有些用到通配符，又称为通配符扩展（wildcard expansion）。Bash 一共提供八种扩展。")]),a._v(" "),t("ul",[t("li",[a._v("波浪线扩展")]),a._v(" "),t("li",[t("code",[a._v("?")]),a._v(" 字符扩展")]),a._v(" "),t("li",[t("code",[a._v("*")]),a._v(" 字符扩展")]),a._v(" "),t("li",[a._v("方括号扩展")]),a._v(" "),t("li",[a._v("大括号扩展")]),a._v(" "),t("li",[a._v("变量扩展")]),a._v(" "),t("li",[a._v("子命令扩展")]),a._v(" "),t("li",[a._v("算术扩展")])]),a._v(" "),t("p",[a._v("本章介绍这八种扩展。")]),a._v(" "),t("p",[a._v("Bash 是先进行扩展，再执行命令。因此，扩展的结果是由 Bash 负责的，与所要执行的命令无关。命令本身并不存在参数扩展，收到什么参数就原样执行。这一点务必需要记住。")]),a._v(" "),t("p",[a._v("模块扩展的英文单词是"),t("code",[a._v("globbing")]),a._v("，这个词来自于早期的 Unix 系统有一个"),t("code",[a._v("/etc/glob")]),a._v("文件，保存扩展的模板。后来 Bash 内置了这个功能，但是这个名字就保留了下来。")]),a._v(" "),t("p",[a._v("模式扩展与正则表达式的关系是，模式扩展早于正则表达式出现，可以看作是原始的正则表达式。它的功能没有正则那么强大灵活，但是优点是简单和方便。")]),a._v(" "),t("p",[a._v("Bash 允许用户关闭扩展。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" -o noglob\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" -f\n")])])]),t("p",[a._v("下面的命令可以重新打开扩展。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" +o noglob\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("set")]),a._v(" +f\n")])])]),t("h2",{attrs:{id:"波浪线扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#波浪线扩展"}},[a._v("#")]),a._v(" 波浪线扩展")]),a._v(" "),t("p",[a._v("波浪线"),t("code",[a._v("~")]),a._v("会自动扩展成当前用户的主目录。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ~\n/home/me\n")])])]),t("p",[t("code",[a._v("~/dir")]),a._v("表示扩展成主目录的某个子目录，"),t("code",[a._v("dir")]),a._v("是主目录里面的一个子目录名。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入 /home/me/foo 目录")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~/foo\n")])])]),t("p",[t("code",[a._v("~user")]),a._v("表示扩展成用户"),t("code",[a._v("user")]),a._v("的主目录。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ~foo\n/home/foo\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ~root\n/root\n")])])]),t("p",[a._v("上面例子中，Bash 会根据波浪号后面的用户名，返回该用户的主目录。")]),a._v(" "),t("p",[a._v("如果"),t("code",[a._v("~user")]),a._v("的"),t("code",[a._v("user")]),a._v("是不存在的用户名，则波浪号扩展不起作用。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ~nonExistedUser\n~nonExistedUser\n")])])]),t("p",[t("code",[a._v("~+")]),a._v("会扩展成当前所在的目录，等同于"),t("code",[a._v("pwd")]),a._v("命令。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~/foo\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ~+\n/home/me/foo\n")])])]),t("h2",{attrs:{id:"字符扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符扩展"}},[a._v("#")]),a._v(" "),t("code",[a._v("?")]),a._v(" 字符扩展")]),a._v(" "),t("p",[t("code",[a._v("?")]),a._v("字符代表文件路径里面的任意单个字符，不包括空字符。比如，"),t("code",[a._v("Data???")]),a._v("匹配所有"),t("code",[a._v("Data")]),a._v("后面跟着三个字符的文件名。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 存在文件 a.txt 和 b.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" ?.txt\na.txt b.txt\n")])])]),t("p",[a._v("上面命令中，"),t("code",[a._v("?")]),a._v("表示单个字符，所以会同时匹配"),t("code",[a._v("a.txt")]),a._v("和"),t("code",[a._v("b.txt")]),a._v("。")]),a._v(" "),t("p",[a._v("如果匹配多个字符，就需要多个"),t("code",[a._v("?")]),a._v("连用。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 存在文件 a.txt、b.txt 和 ab.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" ??.txt\nab.txt\n")])])]),t("p",[a._v("上面命令中，"),t("code",[a._v("??")]),a._v("匹配了两个字符。")]),a._v(" "),t("p",[t("code",[a._v("?")]),a._v(" 字符扩展属于文件名扩展，只有文件确实存在的前提下，才会发生扩展。如果文件不存在，扩展就不会发生。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前目录有 a.txt 文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ?.txt\na.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前目录为空目录")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ?.txt\n?.txt\n")])])]),t("p",[a._v("上面例子中，如果"),t("code",[a._v("?.txt")]),a._v("可以扩展成文件名，"),t("code",[a._v("echo")]),a._v("命令会输出扩展后的结果；如果不能扩展成文件名，"),t("code",[a._v("echo")]),a._v("就会原样输出"),t("code",[a._v("?.txt")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"字符扩展-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符扩展-2"}},[a._v("#")]),a._v(" "),t("code",[a._v("*")]),a._v(" 字符扩展")]),a._v(" "),t("p",[t("code",[a._v("*")]),a._v("字符代表文件路径里面的任意数量的任意字符，包括零个字符。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 存在文件 a.txt、b.txt 和 ab.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" *.txt\na.txt b.txt ab.txt\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("*.txt")]),a._v("代表后缀名为"),t("code",[a._v(".txt")]),a._v("的所有文件。")]),a._v(" "),t("p",[a._v("如果想输出当前目录的所有文件，直接用"),t("code",[a._v("*")]),a._v("即可。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" *\n")])])]),t("p",[t("code",[a._v("*")]),a._v("可以匹配空字符，下面是一个例子。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 存在文件 a.txt、b.txt 和 ab.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" a*.txt\na.txt ab.txt\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" *b*\nb.txt ab.txt\n")])])]),t("p",[a._v("注意，"),t("code",[a._v("*")]),a._v("不会匹配隐藏文件（以"),t("code",[a._v(".")]),a._v("开头的文件），即"),t("code",[a._v("ls *")]),a._v("不会输出隐藏文件。")]),a._v(" "),t("p",[a._v("如果要匹配隐藏文件，需要写成"),t("code",[a._v(".*")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 显示所有隐藏文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" .*\n")])])]),t("p",[a._v("如果要匹配隐藏文件，同时要排除"),t("code",[a._v(".")]),a._v("和"),t("code",[a._v("..")]),a._v("这两个特殊的隐藏文件，可以与方括号扩展结合使用，写成"),t("code",[a._v(".[!.]*")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n")])])]),t("p",[a._v("注意，"),t("code",[a._v("*")]),a._v("字符扩展属于文件名扩展，只有文件确实存在的前提下才会扩展。如果文件不存在，就会原样输出。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前目录不存在 c 开头的文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" c*.txt\nc*.txt\n")])])]),t("p",[a._v("上面例子中，当前目录里面没有"),t("code",[a._v("c")]),a._v("开头的文件，导致"),t("code",[a._v("c*.txt")]),a._v("会原样输出。")]),a._v(" "),t("p",[t("code",[a._v("*")]),a._v("只匹配当前目录，不会匹配子目录。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 子目录有一个 a.txt")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 无效的写法")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" *.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 有效的写法")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" */*.txt\n")])])]),t("p",[a._v("上面的例子，文本文件在子目录，"),t("code",[a._v("*.txt")]),a._v("不会产生匹配，必须写成"),t("code",[a._v("*/*.txt")]),a._v("。有几层子目录，就必须写几层星号。")]),a._v(" "),t("p",[a._v("Bash 4.0 引入了一个参数"),t("code",[a._v("globstar")]),a._v("，当该参数打开时，允许"),t("code",[a._v("**")]),a._v("匹配零个或多个子目录。因此，"),t("code",[a._v("**/*.txt")]),a._v("可以匹配顶层的文本文件和任意深度子目录的文本文件。详细介绍请看后面"),t("code",[a._v("shopt")]),a._v("命令的介绍。")]),a._v(" "),t("h2",{attrs:{id:"方括号扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方括号扩展"}},[a._v("#")]),a._v(" 方括号扩展")]),a._v(" "),t("p",[a._v("方括号扩展的形式是"),t("code",[a._v("[...]")]),a._v("，只有文件确实存在的前提下才会扩展。如果文件不存在，就会原样输出。括号之中的任意一个字符。比如，"),t("code",[a._v("[aeiou]")]),a._v("可以匹配五个元音字母中的任意一个。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 存在文件 a.txt 和 b.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("ab"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".txt\na.txt b.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 只存在文件 a.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("ab"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".txt\na.txt\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("[ab]")]),a._v("可以匹配"),t("code",[a._v("a")]),a._v("或"),t("code",[a._v("b")]),a._v("，前提是确实存在相应的文件。")]),a._v(" "),t("p",[a._v("方括号扩展属于文件名匹配，即扩展后的结果必须符合现有的文件路径。如果不存在匹配，就会保持原样，不进行扩展。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不存在文件 a.txt 和 b.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("ab"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".txt\nls: 无法访问"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'[ab].txt'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" 没有那个文件或目录\n")])])]),t("p",[a._v("上面例子中，由于扩展后的文件不存在，"),t("code",[a._v("[ab].txt")]),a._v("就原样输出了，导致"),t("code",[a._v("ls")]),a._v("命名报错。")]),a._v(" "),t("p",[a._v("方括号扩展还有两种变体："),t("code",[a._v("[^...]")]),a._v("和"),t("code",[a._v("[!...]")]),a._v("。它们表示匹配不在方括号里面的字符，这两种写法是等价的。比如，"),t("code",[a._v("[^abc]")]),a._v("或"),t("code",[a._v("[!abc]")]),a._v("表示匹配除了"),t("code",[a._v("a")]),a._v("、"),t("code",[a._v("b")]),a._v("、"),t("code",[a._v("c")]),a._v("以外的字符。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 存在 aaa、bbb、aba 三个文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" ?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("?\naba bbb\n")])])]),t("p",[a._v("上面命令中，"),t("code",[a._v("[!a]")]),a._v("表示文件名第二个字符不是"),t("code",[a._v("a")]),a._v("的文件名，所以返回了"),t("code",[a._v("aba")]),a._v("和"),t("code",[a._v("bbb")]),a._v("两个文件。")]),a._v(" "),t("p",[a._v("注意，如果需要匹配"),t("code",[a._v("[")]),a._v("字符，可以放在方括号内，比如"),t("code",[a._v("[[aeiou]")]),a._v("。如果需要匹配连字号"),t("code",[a._v("-")]),a._v("，只能放在方括号内部的开头或结尾，比如"),t("code",[a._v("[-aeiou]")]),a._v("或"),t("code",[a._v("[aeiou-]")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"start-end-扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start-end-扩展"}},[a._v("#")]),a._v(" [start-end] 扩展")]),a._v(" "),t("p",[a._v("方括号扩展有一个简写形式"),t("code",[a._v("[start-end]")]),a._v("，表示匹配一个连续的范围。比如，"),t("code",[a._v("[a-c]")]),a._v("等同于"),t("code",[a._v("[abc]")]),a._v("，"),t("code",[a._v("[0-9]")]),a._v("匹配"),t("code",[a._v("[0123456789]")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 存在文件 a.txt、b.txt 和 c.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("a-c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".txt\na.txt\nb.txt\nc.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 存在文件 report1.txt、report2.txt 和 report3.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" report"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("-9"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".txt\nreport1.txt\nreport2.txt\nreport3.txt\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),t("p",[a._v("下面是一些常用简写的例子。")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("[a-z]")]),a._v("：所有小写字母。")]),a._v(" "),t("li",[t("code",[a._v("[a-zA-Z]")]),a._v("：所有小写字母与大写字母。")]),a._v(" "),t("li",[t("code",[a._v("[a-zA-Z0-9]")]),a._v("：所有小写字母、大写字母与数字。")]),a._v(" "),t("li",[t("code",[a._v("[abc]*")]),a._v("：所有以"),t("code",[a._v("a")]),a._v("、"),t("code",[a._v("b")]),a._v("、"),t("code",[a._v("c")]),a._v("字符之一开头的文件名。")]),a._v(" "),t("li",[t("code",[a._v("program.[co]")]),a._v("：文件"),t("code",[a._v("program.c")]),a._v("与文件"),t("code",[a._v("program.o")]),a._v("。")]),a._v(" "),t("li",[t("code",[a._v("BACKUP.[0-9][0-9][0-9]")]),a._v("：所有以"),t("code",[a._v("BACKUP.")]),a._v("开头，后面是三个数字的文件名。")])]),a._v(" "),t("p",[a._v("这种简写形式有一个否定形式"),t("code",[a._v("[!start-end]")]),a._v("，表示匹配不属于这个范围的字符。比如，"),t("code",[a._v("[!a-zA-Z]")]),a._v("表示匹配非英文字母的字符。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" report"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("–3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".txt\nreport4.txt report5.txt\n")])])]),t("p",[a._v("上面代码中，"),t("code",[a._v("[!1-3]")]),a._v("表示排除1、2和3。")]),a._v(" "),t("h2",{attrs:{id:"大括号扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大括号扩展"}},[a._v("#")]),a._v(" 大括号扩展")]),a._v(" "),t("p",[a._v("大括号扩展"),t("code",[a._v("{...}")]),a._v("表示分别扩展成大括号里面的所有值，各个值之间使用逗号分隔。比如，"),t("code",[a._v("{1,2,3}")]),a._v("扩展成"),t("code",[a._v("1 2 3")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1,2")]),a._v(",3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a,e,i,u,o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("g\ndag deg "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("dig")]),a._v(" dug dog\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" Front-"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("A,B,C"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("-Back\nFront-A-Back Front-B-Back Front-C-Back\n")])])]),t("p",[a._v("注意，大括号扩展不是文件名扩展。它会扩展成所有给定的值，而不管是否有对应的文件存在。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a,b,c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(".txt\nls: 无法访问"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'a.txt'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" 没有那个文件或目录\nls: 无法访问"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'b.txt'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" 没有那个文件或目录\nls: 无法访问"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'c.txt'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" 没有那个文件或目录\n")])])]),t("p",[a._v("上面例子中，即使不存在对应的文件，"),t("code",[a._v("{a,b,c}")]),a._v("依然扩展成三个文件名，导致"),t("code",[a._v("ls")]),a._v("命令报了三个错误。")]),a._v(" "),t("p",[a._v("另一个需要注意的地方是，大括号内部的逗号前后不能有空格。否则，大括号扩展会失效。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" , "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" , "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("上面例子中，逗号前后有空格，Bash 就会认为这不是大括号扩展，而是三个独立的参数。")]),a._v(" "),t("p",[a._v("逗号前面可以没有值，表示扩展的第一项为空。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" a.log"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(",.bak"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 等同于")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cp a.log a.log.bak")]),a._v("\n")])])]),t("p",[a._v("大括号可以嵌套。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("p,pe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("g,png"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\njpg jpeg png\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("A"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1,2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(",B"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3,4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("b\naA1b aA2b aB3b aB4b\n")])])]),t("p",[a._v("大括号也可以与其他模式联用，并且总是先于其他模式进行扩展。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" /bin/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("cat,b*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n/bin/cat /bin/b2sum /bin/base32 /bin/base64 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 基本等同于")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" /bin/cat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" /bin/b*\n")])])]),t("p",[a._v("上面例子中，会先进行大括号扩展，然后进行"),t("code",[a._v("*")]),a._v("扩展，等同于执行两条"),t("code",[a._v("echo")]),a._v("命令。")]),a._v(" "),t("p",[a._v("大括号可以用于多字符的模式，方括号不行（只能匹配单字符）。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("cat,dog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" dog\n")])])]),t("p",[a._v("由于大括号扩展"),t("code",[a._v("{...}")]),a._v("不是文件名扩展，所以它总是会扩展的。这与方括号扩展"),t("code",[a._v("[...]")]),a._v("完全不同，如果匹配的文件不存在，方括号就不会扩展。这一点要注意区分。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不存在 a.txt 和 b.txt")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("ab"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".txt\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("ab"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(".txt\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a,b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(".txt\na.txt b.txt\n")])])]),t("p",[a._v("上面例子中，如果不存在"),t("code",[a._v("a.txt")]),a._v("和"),t("code",[a._v("b.txt")]),a._v("，那么"),t("code",[a._v("[ab].txt")]),a._v("就会变成一个普通的文件名，而"),t("code",[a._v("{a,b}.txt")]),a._v("可以照样扩展。")]),a._v(" "),t("h2",{attrs:{id:"start-end-扩展-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start-end-扩展-2"}},[a._v("#")]),a._v(" {start..end} 扩展")]),a._v(" "),t("p",[a._v("大括号扩展有一个简写形式"),t("code",[a._v("{start..end}")]),a._v("，表示扩展成一个连续序列。比如，"),t("code",[a._v("{a..z}")]),a._v("可以扩展成26个小写英文字母。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\na b c\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("g\ndag dbg dcg ddg\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" Number_"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nNumber_1 Number_2 Number_3 Number_4 Number_5\n")])])]),t("p",[a._v("这种简写形式支持逆序。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\nc b a\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])])]),t("p",[a._v("注意，如果遇到无法理解的简写，大括号模式就会原样输出，不会扩展。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("3c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("3c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("这种简写形式可以嵌套使用，形成复杂的扩展。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" ."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("mp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(",m4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a,b,p,v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n.mp3 .mp4 .m4a .m4b .m4p .m4v\n")])])]),t("p",[a._v("大括号扩展的常见用途为新建一系列目录。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2007")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2009")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("-"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("01"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("上面命令会新建36个子目录，每个子目录的名字都是”年份-月份“。")]),a._v(" "),t("p",[a._v("这个写法的另一个常见用途，是直接用于"),t("code",[a._v("for")]),a._v("循环。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[a._v("i")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$i")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n")])])]),t("p",[a._v("上面例子会循环4次。")]),a._v(" "),t("p",[a._v("如果整数前面有前导"),t("code",[a._v("0")]),a._v("，扩展输出的每一项都有前导"),t("code",[a._v("0")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("01"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n01 02 03 04 05\n\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("001"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n001 002 003 004 005\n")])])]),t("p",[a._v("这种简写形式还可以使用第二个双点号（"),t("code",[a._v("start..end..step")]),a._v("），用来指定扩展的步长。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("\n")])])]),t("p",[a._v("上面代码将"),t("code",[a._v("0")]),a._v("扩展到"),t("code",[a._v("8")]),a._v("，每次递增的长度为"),t("code",[a._v("2")]),a._v("，所以一共输出5个数字。")]),a._v(" "),t("p",[a._v("多个简写形式连用，会有循环处理的效果。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\na1 a2 a3 b1 b2 b3 c1 c2 c3\n")])])]),t("h2",{attrs:{id:"变量扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量扩展"}},[a._v("#")]),a._v(" 变量扩展")]),a._v(" "),t("p",[a._v("Bash 将美元符号"),t("code",[a._v("$")]),a._v("开头的词元视为变量，将其扩展成变量值，详见《Bash 变量》一章。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$SHELL")]),a._v("\n/bin/bash\n")])])]),t("p",[a._v("变量名除了放在美元符号后面，也可以放在"),t("code",[a._v("${}")]),a._v("里面。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("SHELL")]),a._v("}")]),a._v("\n/bin/bash\n")])])]),t("p",[t("code",[a._v("${!string*}")]),a._v("或"),t("code",[a._v("${!string@}")]),a._v("返回所有匹配给定字符串"),t("code",[a._v("string")]),a._v("的变量名。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("S*}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("SECONDS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("SHELL")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("SHELLOPTS")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("SHLVL")]),a._v(" SSH_AGENT_PID "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("SSH_AUTH_SOCK")]),a._v("\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("${!S*}")]),a._v("扩展成所有以"),t("code",[a._v("S")]),a._v("开头的变量名。")]),a._v(" "),t("h2",{attrs:{id:"子命令扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子命令扩展"}},[a._v("#")]),a._v(" 子命令扩展")]),a._v(" "),t("p",[t("code",[a._v("$(...)")]),a._v("可以扩展成另一个命令的运行结果，该命令的所有输出都会作为返回值。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\nTue Jan "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("28")]),a._v(" 00:01:13 CST "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2020")]),a._v("\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("$(date)")]),a._v("返回"),t("code",[a._v("date")]),a._v("命令的运行结果。")]),a._v(" "),t("p",[a._v("还有另一种较老的语法，子命令放在反引号之中，也可以扩展成命令的运行结果。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("date")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("\nTue Jan "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("28")]),a._v(" 00:01:13 CST "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2020")]),a._v("\n")])])]),t("p",[t("code",[a._v("$(...)")]),a._v("可以嵌套，比如"),t("code",[a._v("$(ls $(pwd))")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"算术扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算术扩展"}},[a._v("#")]),a._v(" 算术扩展")]),a._v(" "),t("p",[t("code",[a._v("$((...))")]),a._v("可以扩展成整数运算的结果，详见《Bash 的算术运算》一章。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$((")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("))")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v("\n")])])]),t("h2",{attrs:{id:"字符类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符类"}},[a._v("#")]),a._v(" 字符类")]),a._v(" "),t("p",[t("code",[a._v("[[:class:]]")]),a._v("表示一个字符类，扩展成某一类特定字符之中的一个。常用的字符类如下。")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("[[:alnum:]]")]),a._v("：匹配任意英文字母与数字")]),a._v(" "),t("li",[t("code",[a._v("[[:alpha:]]")]),a._v("：匹配任意英文字母")]),a._v(" "),t("li",[t("code",[a._v("[[:blank:]]")]),a._v("：空格和 Tab 键。")]),a._v(" "),t("li",[t("code",[a._v("[[:cntrl:]]")]),a._v("：ASCII 码 0-31 的不可打印字符。")]),a._v(" "),t("li",[t("code",[a._v("[[:digit:]]")]),a._v("：匹配任意数字 0-9。")]),a._v(" "),t("li",[t("code",[a._v("[[:graph:]]")]),a._v("：A-Z、a-z、0-9 和标点符号。")]),a._v(" "),t("li",[t("code",[a._v("[[:lower:]]")]),a._v("：匹配任意小写字母 a-z。")]),a._v(" "),t("li",[t("code",[a._v("[[:print:]]")]),a._v("：ASCII 码 32-127 的可打印字符。")]),a._v(" "),t("li",[t("code",[a._v("[[:punct:]]")]),a._v("：标点符号（除了 A-Z、a-z、0-9 的可打印字符）。")]),a._v(" "),t("li",[t("code",[a._v("[[:space:]]")]),a._v("：空格、Tab、LF（10）、VT（11）、FF（12）、CR（13）。")]),a._v(" "),t("li",[t("code",[a._v("[[:upper:]]")]),a._v("：匹配任意大写字母 A-Z。")]),a._v(" "),t("li",[t("code",[a._v("[[:xdigit:]]")]),a._v("：16进制字符（A-F、a-f、0-9）。")])]),a._v(" "),t("p",[a._v("请看下面的例子。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":upper:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n")])])]),t("p",[a._v("上面命令输出所有大写字母开头的文件名。")]),a._v(" "),t("p",[a._v("字符类的第一个方括号后面，可以加上感叹号"),t("code",[a._v("!")]),a._v("，表示否定。比如，"),t("code",[a._v("[![:digit:]]")]),a._v("匹配所有非数字。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":digit:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n")])])]),t("p",[a._v("上面命令输出所有不以数字开头的文件名。")]),a._v(" "),t("p",[a._v("字符类也属于文件名扩展，如果没有匹配的文件名，字符类就会原样输出。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不存在以大写字母开头的文件")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":upper:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(":upper:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("*\n")])])]),t("p",[a._v("上面例子中，由于没有可匹配的文件，字符类就原样输出了。")]),a._v(" "),t("h2",{attrs:{id:"使用注意点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用注意点"}},[a._v("#")]),a._v(" 使用注意点")]),a._v(" "),t("p",[a._v("通配符有一些使用注意点，不可不知。")]),a._v(" "),t("p",[t("strong",[a._v("（1）通配符是先解释，再执行。")])]),a._v(" "),t("p",[a._v("Bash 接收到命令以后，发现里面有通配符，会进行通配符扩展，然后再执行命令。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" a*.txt\nab.txt\n")])])]),t("p",[a._v("上面命令的执行过程是，Bash 先将"),t("code",[a._v("a*.txt")]),a._v("扩展成"),t("code",[a._v("ab.txt")]),a._v("，然后再执行"),t("code",[a._v("ls ab.txt")]),a._v("。")]),a._v(" "),t("p",[t("strong",[a._v("（2）文件名扩展在不匹配时，会原样输出。")])]),a._v(" "),t("p",[a._v("文件名扩展在没有可匹配的文件时，会原样输出。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 不存在 r 开头的文件名")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" r*\nr*\n")])])]),t("p",[a._v("上面代码中，由于不存在"),t("code",[a._v("r")]),a._v("开头的文件名，"),t("code",[a._v("r*")]),a._v("会原样输出。")]),a._v(" "),t("p",[a._v("下面是另一个例子。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" *.csv\nls: *.csv: No such "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),a._v(" or directory\n")])])]),t("p",[a._v("另外，前面已经说过，大括号扩展"),t("code",[a._v("{...}")]),a._v("不是文件名扩展。")]),a._v(" "),t("p",[t("strong",[a._v("（3）只适用于单层路径。")])]),a._v(" "),t("p",[a._v("所有文件名扩展只匹配单层路径，不能跨目录匹配，即无法匹配子目录里面的文件。或者说，"),t("code",[a._v("?")]),a._v("或"),t("code",[a._v("*")]),a._v("这样的通配符，不能匹配路径分隔符（"),t("code",[a._v("/")]),a._v("）。")]),a._v(" "),t("p",[a._v("如果要匹配子目录里面的文件，可以写成下面这样。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" */*.txt\n")])])]),t("p",[a._v("Bash 4.0 新增了一个"),t("code",[a._v("globstar")]),a._v("参数，允许"),t("code",[a._v("**")]),a._v("匹配零个或多个子目录，详见后面"),t("code",[a._v("shopt")]),a._v("命令的介绍。")]),a._v(" "),t("p",[t("strong",[a._v("（4）文件名可以使用通配符。")])]),a._v(" "),t("p",[a._v("Bash 允许文件名使用通配符，即文件名包括特殊字符。这时引用文件名，需要把文件名放在单引号里面。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'fo*'")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\nfo*\n")])])]),t("p",[a._v("上面代码创建了一个"),t("code",[a._v("fo*")]),a._v("文件，这时"),t("code",[a._v("*")]),a._v("就是文件名的一部分。")]),a._v(" "),t("h2",{attrs:{id:"量词语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#量词语法"}},[a._v("#")]),a._v(" 量词语法")]),a._v(" "),t("p",[a._v("量词语法用来控制模式匹配的次数。它只有在 Bash 的"),t("code",[a._v("extglob")]),a._v("参数打开的情况下才能使用，不过一般是默认打开的。下面的命令可以查询。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" extglob\nextglob        \ton\n")])])]),t("p",[a._v("如果"),t("code",[a._v("extglob")]),a._v("参数是关闭的，可以用下面的命令打开。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s extglob\n")])])]),t("p",[a._v("量词语法有下面几个。")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("?(pattern-list)")]),a._v("：匹配零个或一个模式。")]),a._v(" "),t("li",[t("code",[a._v("*(pattern-list)")]),a._v("：匹配零个或多个模式。")]),a._v(" "),t("li",[t("code",[a._v("+(pattern-list)")]),a._v("：匹配一个或多个模式。")]),a._v(" "),t("li",[t("code",[a._v("@(pattern-list)")]),a._v("：只匹配一个模式。")]),a._v(" "),t("li",[t("code",[a._v("!(pattern-list)")]),a._v("：匹配给定模式以外的任何内容。")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" abc?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("txt\nabctxt abc.txt\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("?(.)")]),a._v("匹配零个或一个点。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" abc?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("def"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nabc abcdef\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("?(def)")]),a._v("匹配零个或一个"),t("code",[a._v("def")]),a._v("。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" abc+"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(".txt"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(".php"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nabc.php abc.txt\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("+(.txt|.php)")]),a._v("匹配文件有一个"),t("code",[a._v(".txt")]),a._v("或"),t("code",[a._v(".php")]),a._v("后缀名。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" abc+"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v(".txt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nabc.txt abc.txt.txt\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("+(.txt)")]),a._v("匹配文件有一个或多个"),t("code",[a._v(".txt")]),a._v("后缀名。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" a"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(".txt\na.txt abb.txt ac.txt\n")])])]),t("p",[a._v("上面例子中，"),t("code",[a._v("!(b)")]),a._v("表示匹配单个字母"),t("code",[a._v("b")]),a._v("以外的任意内容，所以除了"),t("code",[a._v("ab.txt")]),a._v("以外，其他文件名都能匹配。")]),a._v(" "),t("p",[a._v("量词语法也属于文件名扩展，如果不存在可匹配的文件，就会原样输出。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 没有 abc 开头的文件名")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" abc?"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("def"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nls: 无法访问"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'abc?(def)'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" 没有那个文件或目录\n")])])]),t("p",[a._v("上面例子中，由于没有可匹配的文件，"),t("code",[a._v("abc?(def)")]),a._v("就原样输出，导致"),t("code",[a._v("ls")]),a._v("命令报错。")]),a._v(" "),t("h2",{attrs:{id:"shopt-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shopt-命令"}},[a._v("#")]),a._v(" shopt 命令")]),a._v(" "),t("p",[t("code",[a._v("shopt")]),a._v("命令可以调整 Bash 的行为。它有好几个参数跟通配符扩展有关。")]),a._v(" "),t("p",[t("code",[a._v("shopt")]),a._v("命令的使用方法如下。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打开某个参数")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("optionname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 关闭某个参数")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("optionname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查询某个参数关闭还是打开")]),a._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("optionname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[t("strong",[a._v("（1）dotglob 参数")])]),a._v(" "),t("p",[t("code",[a._v("dotglob")]),a._v("参数可以让扩展结果包括隐藏文件（即点开头的文件）。")]),a._v(" "),t("p",[a._v("正常情况下，扩展结果不包括隐藏文件。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" *\nabc.txt\n")])])]),t("p",[a._v("打开"),t("code",[a._v("dotglob")]),a._v("，就会包括隐藏文件。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s dotglob\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" *\nabc.txt .config\n")])])]),t("p",[t("strong",[a._v("（2）nullglob 参数")])]),a._v(" "),t("p",[t("code",[a._v("nullglob")]),a._v("参数可以让通配符不匹配任何文件名时，返回空字符。")]),a._v(" "),t("p",[a._v("默认情况下，通配符不匹配任何文件名时，会保持不变。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" b*\nrm: 无法删除"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'b*'")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" 没有那个文件或目录\n")])])]),t("p",[a._v("上面例子中，由于当前目录不包括"),t("code",[a._v("b")]),a._v("开头的文件名，导致"),t("code",[a._v("b*")]),a._v("不会发生文件名扩展，保持原样不变，所以"),t("code",[a._v("rm")]),a._v("命令报错没有"),t("code",[a._v("b*")]),a._v("这个文件。")]),a._v(" "),t("p",[a._v("打开"),t("code",[a._v("nullglob")]),a._v("参数，就可以让不匹配的通配符返回空字符串。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s nullglob\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" b*\nrm: 缺少操作数\n")])])]),t("p",[a._v("上面例子中，由于没有"),t("code",[a._v("b*")]),a._v("匹配的文件名，所以"),t("code",[a._v("rm b*")]),a._v("扩展成了"),t("code",[a._v("rm")]),a._v("，导致报错变成了”缺少操作数“。")]),a._v(" "),t("p",[t("strong",[a._v("（3）failglob 参数")])]),a._v(" "),t("p",[t("code",[a._v("failglob")]),a._v("参数使得通配符不匹配任何文件名时，Bash 会直接报错，而不是让各个命令去处理。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s failglob\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" b*\nbash: 无匹配: b*\n")])])]),t("p",[a._v("上面例子中，打开"),t("code",[a._v("failglob")]),a._v("以后，由于"),t("code",[a._v("b*")]),a._v("不匹配任何文件名，Bash 直接报错了，不再让"),t("code",[a._v("rm")]),a._v("命令去处理。")]),a._v(" "),t("p",[t("strong",[a._v("（4）extglob 参数")])]),a._v(" "),t("p",[t("code",[a._v("extglob")]),a._v("参数使得 Bash 支持 ksh 的一些扩展语法。它默认应该是打开的。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" extglob\nextglob        \ton\n")])])]),t("p",[a._v("它的主要应用是支持量词语法。如果不希望支持量词语法，可以用下面的命令关闭。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -u extglob\n")])])]),t("p",[t("strong",[a._v("（5）nocaseglob 参数")])]),a._v(" "),t("p",[t("code",[a._v("nocaseglob")]),a._v("参数可以让通配符扩展不区分大小写。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s nocaseglob\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" /windows/program*\n/windows/ProgramData\n/windows/Program Files\n/windows/Program Files "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("x86"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("上面例子中，打开"),t("code",[a._v("nocaseglob")]),a._v("以后，"),t("code",[a._v("program*")]),a._v("就不区分大小写了，可以匹配"),t("code",[a._v("ProgramData")]),a._v("等。")]),a._v(" "),t("p",[t("strong",[a._v("（6）globstar 参数")])]),a._v(" "),t("p",[t("code",[a._v("globstar")]),a._v("参数可以使得"),t("code",[a._v("**")]),a._v("匹配零个或多个子目录。该参数默认是关闭的。")]),a._v(" "),t("p",[a._v("假设有下面的文件结构。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("a.txt\nsub1/b.txt\nsub1/sub2/c.txt\n")])])]),t("p",[a._v("上面的文件结构中，顶层目录、第一级子目录"),t("code",[a._v("sub1")]),a._v("、第二级子目录"),t("code",[a._v("sub1\\sub2")]),a._v("里面各有一个文本文件。请问怎样才能使用通配符，将它们显示出来？")]),a._v(" "),t("p",[a._v("默认情况下，只能写成下面这样。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" *.txt */*.txt */*/*.txt\na.txt  sub1/b.txt  sub1/sub2/c.txt\n")])])]),t("p",[a._v("这是因为"),t("code",[a._v("*")]),a._v("只匹配当前目录，如果要匹配子目录，只能一层层写出来。")]),a._v(" "),t("p",[a._v("打开"),t("code",[a._v("globstar")]),a._v("参数以后，"),t("code",[a._v("**")]),a._v("匹配零个或多个子目录。因此，"),t("code",[a._v("**/*.txt")]),a._v("就可以得到想要的结果。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("shopt")]),a._v(" -s globstar\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" **/*.txt\na.txt  sub1/b.txt  sub1/sub2/c.txt\n")])])]),t("h2",{attrs:{id:"参考链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[a._v("#")]),a._v(" 参考链接")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://medium.com/@leedowthwaite/why-most-people-only-think-they-understand-wildcards-63bb9c2024ab",target:"_blank",rel:"noopener noreferrer"}},[a._v("Think You Understand Wildcards? Think Again"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://appcodelabs.com/advanced-wildcard-patterns-most-people-dont-know",target:"_blank",rel:"noopener noreferrer"}},[a._v("Advanced Wildcard Patterns Most People Don’t Know"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);