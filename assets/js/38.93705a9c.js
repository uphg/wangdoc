(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{478:function(s,t,a){"use strict";a.r(t);var e=a(76),l=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"ls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ls"}},[s._v("#")]),s._v(" ls")]),s._v(" "),a("p",[a("code",[s._v("ls")]),s._v("命令用于列出当前目录里面的文件和子目录。")]),s._v(" "),a("h2",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[s._v("#")]),s._v(" 参数")]),s._v(" "),a("ul",[a("li",[s._v("a：列出隐藏文件")]),s._v(" "),a("li",[s._v("l：以长格式列出文件")]),s._v(" "),a("li",[s._v("t：按最后编辑日期排序，最新的最先。这在某个大目录里找出最近修改的文件列表时很有用，比如将结果导入（ pipe ） head 或者 sed 10q。或许加上 -l 会效果更好。当然如果你想获取最旧的文件列表，只要加 -r 反转列表即可。")]),s._v(" "),a("li",[s._v("X：按文件类型分类。这在多语言或多后缀的项目中特别方便，比如头文件和源文件分开，或区分开源文件和生成文件或目录。")]),s._v(" "),a("li",[s._v("v：按照文件名里的版本号排序。")]),s._v(" "),a("li",[s._v("S：按文件大小排序。")]),s._v(" "),a("li",[s._v("R：递归地列举文件。这个选项和 -l 组合使用并将结果导出到 less 效果很好。")])]),s._v(" "),a("p",[s._v("可以把结果导出给类似 vim 的进程。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -XR "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" -\n")])])])])}),[],!1,null,null,null);t.default=l.exports}}]);